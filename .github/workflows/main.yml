# This is a basic workflow to help you get started with Actions

name: CI-Master

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      #- name: Setup .NET Core
      #  uses: actions/setup-dotnet@v1
      #  with:
      #    dotnet-version: 3.1

      - uses: actions/cache@v2
        id: cache
        with:
             path: ~/.nuget/packages
             key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}

        # Setup Nuget
      # - name: Setup NuGet
      #  uses: NuGet/setup-nuget@v1.0.2

        # Restore Nuget
      - name: Restore NuGet Packages
        run: nuget restore CICD.sln

      # Runs a single command using the runners shell
      - name: build project
        run: dotnet build --configuration Release

      # Runs a set of commands using the runners shell
      - name: publish project
        run: dotnet publish
          
      # Artifact 
     # - name: Upload WebApp1 Build Artifact
     #   uses: actions/upload-artifact@v2
     #   with:
     #     name: MasterArtifact
      #    path: D:\a\ci_cd\ci_cd\bin\Debug\netcoreapp3.1\publish\   
          
     # - name: Stop Application Pool
      #  shell: cmd
     #   run: '"C:/Program Files (x86)/IIS/Microsoft Web Deploy V3/msdeploy.exe" -verb:sync -allowUntrusted -source:recycleApp -dest:recycleApp="${{secrets.RECYCLE_APP_NAME }}",recycleMode="StopAppPool",computerName="${{secrets.IIS_SERVER_COMPUTER_NAME }}msdeploy.axd?site=${{secrets.IIS_WEBSITE_NAME }}",username="${{secrets.IIS_SERVER_USERNAME }}",password="${{secrets.IIS_SERVER_PASSWORD }}",AuthType="Basic"'
      - name: Deploy Application to EC2-IIS
        shell: cmd
        run: '"C:/Program Files (x86)/IIS/Microsoft Web Deploy V3/msdeploy.exe" -verb:sync -useCheckSum -allowUntrusted -source:contentPath="D:\a\ci_cd\ci_cd\bin\Debug\netcoreapp3.1\publish\" -dest:contentPath="${{secrets.WEBSITE_CONTENT_PATH }}",computerName="${{secrets.IIS_SERVER_COMPUTER_NAME }}/msdeploy.axd?site=${{secrets.IIS_WEBSITE_NAME }}",username="${{secrets.IIS_SERVER_USERNAME }}",password="${{secrets.IIS_SERVER_PASSWORD }}",authtype="Basic"'
    #  - name: Start Application Pool
     #   shell: cmd
     #   run: '"C:/Program Files (x86)/IIS/Microsoft Web Deploy V3/msdeploy.exe" -verb:sync -allowUntrusted -source:recycleApp -dest:recycleApp="${{secrets.RECYCLE_APP_NAME }}",recycleMode="StartAppPool",computerName="${{secrets.IIS_SERVER_COMPUTER_NAME }}/msdeploy.axd?site=${{secrets.IIS_WEBSITE_NAME }}",username="${{secrets.IIS_SERVER_USERNAME }}",password="${{secrets.IIS_SERVER_PASSWORD }}",AuthType="Basic"'
    
   
    
   
